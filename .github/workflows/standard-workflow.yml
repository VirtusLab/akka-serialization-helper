name: Standard Workflow

on: workflow_call

jobs:
  code-style-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Run simple checks
        run: |
          PATH=$PATH:./scripts
          set -x
          enforce-issue-number-for-todos
          enforce-newline-at-eof
          prohibit-trailing-whitespace

          npm install --global remark-cli remark-lint-no-dead-urls remark-validate-links
          validate-markdown-links

      - uses: coursier/cache-action@v7
      - uses: sbt/setup-sbt@v1

      - name: Check code style
        # Curiously, scalafmtCheckAll doesn't cover *.sbt files, hence scalafmtSbtCheck is needed as well
        run: sbt scalafmtCheckAll scalafmtSbtCheck "scalafixAll --check"

      - name: Substitute sbt plugin snapshot version
        run: ./scripts/substitute-sbt-plugin-snapshot-version

      - name: Check code style - examples/event-migration
        run: sbt scalafmtCheckAll scalafmtSbtCheck "scalafixAll --check"
        working-directory: examples/event-migration

      - name: Check code style - examples/akka-cluster-app
        run: sbt scalafmtCheckAll scalafmtSbtCheck "scalafixAll --check"
        working-directory: examples/akka-cluster-app

      - name: Check code style - examples/akka-persistence-app
        run: sbt scalafmtCheckAll scalafmtSbtCheck "scalafixAll --check"
        working-directory: examples/akka-persistence-app

  test-212:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: coursier/cache-action@v7
      - uses: sbt/setup-sbt@v1

      - name: Run tests
        run: |
          sbt "++ 2.12.17 test"
          sbt "++ 2.12.18 test"
          sbt "++ 2.12.19 test"
          sbt "++ 2.12.20 test"

  test-213:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: coursier/cache-action@v7
      - uses: sbt/setup-sbt@v1

      - name: Run tests
        run: |
          sbt "++ 2.13.14 test"
          sbt "++ 2.13.15 test"
          sbt "++ 2.13.16 test"

  test-sbt-plugin:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: coursier/cache-action@v7
      - uses: sbt/setup-sbt@v1

      - name: Test sbt plugin
        run: sbt scripted

  run-examples:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: coursier/cache-action@v7
      - uses: sbt/setup-sbt@v1

      - name: Substitute sbt plugin snapshot version
        run: ./scripts/substitute-sbt-plugin-snapshot-version

      - name: Test event-migration-examples
        run: sbt test
        working-directory: examples/event-migration

      - name: Compile akka-cluster-app
        run: sbt compile
        working-directory: examples/akka-cluster-app

      - name: Test akka-persistence-app
        run: sbt test
        working-directory: examples/akka-persistence-app

  # <PEKKO-REMOVE-START>
  patch-and-push-to-psh:
    if: github.event_name != 'pull_request'
    needs: [code-style-check, test-212, test-213, test-sbt-plugin, run-examples]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          # Fetch all history so that a push to pekko-serialization-helper succeeds.
          # See https://stackoverflow.com/q/76470864
          fetch-depth: 0
      - run: git status
      - run: git checkout -b TEMP/from-ash
      - run: curl -sL https://raw.githubusercontent.com/ap/rename/master/rename | sudo tee /usr/local/bin/rename
      - run: sudo chmod +x /usr/local/bin/rename
      - run: ./scripts/akka-to-pekko
      - run: git add .
      - run: git config user.email "psh@virtuslab.com"
      - run: git config user.name "Pekko Serialization Helper Bot"
      - run: git commit -m 'Migrate `main` branch from from akka-serialization-helper'
      - env:
          # 2.1 Generate an SSH key in terminal (Leave the passphrase empty)
          # 2.2 Add public key in the external repository: <external repository>/Settings/Deploy keys/Add deploy key
          #     Paste the public key. Enable "Allow write access"
          # 2.3 Add private key in the source repository: <external repository>/Settings/Secrets/Actions/New repository secret
          #     Paste the private key.
          PSH_SSH_PRIVATE_KEY: ${{ secrets.PSH_SSH_PRIVATE_KEY }}
        run: mkdir -p ~/.ssh/ && echo "$PSH_SSH_PRIVATE_KEY" > ~/.ssh/psh && chmod 400 ~/.ssh/psh
      - run: git config core.sshCommand "ssh -i $HOME/.ssh/psh"
      - run: git push --force git@github.com:VirtusLab/pekko-serialization-helper.git HEAD:main
  # <PEKKO-REMOVE-END>

###
